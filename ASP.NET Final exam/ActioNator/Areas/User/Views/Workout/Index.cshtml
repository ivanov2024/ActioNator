@using ActioNator.ViewModels.Workouts
@model IEnumerable<WorkoutCardViewModel>
@{
    ViewData["Title"] = "Your Workouts | ActioNator";
}

@* Add anti-forgery token *@
@Html.AntiForgeryToken()

@section Scripts {
    <!-- Using fixed version of the workout exercises JS file to prevent frontend freeze -->
    <script src="~/js/workoutExercisesFixed.js" asp-append-version="true"></script>
    <script>
        // Pass server-side model data to the Alpine component
        document.addEventListener('DOMContentLoaded', function() {
            // Make the model data available to the Alpine component
            window.workoutModelData = @Html.Raw(Json.Serialize(Model));
            console.log('[WORKOUT] Model data initialized for workouts page');
            
            // Add safety check for Alpine initialization
            if (!window.Alpine) {
                console.error('[WORKOUT] Alpine.js not loaded! This will cause UI issues.');
            }
            
            // Add direct event listener to the form to ensure it doesn't submit normally
            const form = document.getElementById('createWorkoutForm');
            if (form) {
                console.log('[WORKOUT] Adding direct event listener to form');
                form.addEventListener('submit', function(e) {
                    console.log('[WORKOUT] Form submit intercepted by direct event listener');
                    e.preventDefault();
                    e.stopPropagation();
                    return false;
                });
            }
        });
    </script>
}
<!-- Main Workouts Page Container -->
<div class="container mx-auto px-4 py-8" x-data="workoutsPage()" x-init="init()">
    <h1 class="text-3xl font-bold text-gray-800 mb-8">Your Workouts</h1>
    
    <!-- Add Workout Button -->
    <div class="mb-8">
        <button @@click="showModal = true" 
                class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
            </svg>
            Add New Workout
        </button>
    </div>
    <!-- Workouts Container -->
    <div id="workoutsContainer" class="mt-8">
        @await Html.PartialAsync("_WorkoutsPartial", Model)
    </div>
    <!-- Create Workout Modal -->
    <div x-show="showModal" 
         x-cloak
         class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 backdrop-blur-sm"
         @@keydown.escape.window="showModal = false">
        <div @@click.away="showModal = false"
             class="bg-white rounded-xl shadow-xl max-w-md w-full mx-4 overflow-hidden"
             x-show="showModal"
             x-transition:enter="transition ease-out duration-300"
             x-transition:enter-start="opacity-0 transform scale-95"
             x-transition:enter-end="opacity-100 transform scale-100"
             x-transition:leave="transition ease-in duration-200"
             x-transition:leave-start="opacity-100 transform scale-100"
             x-transition:leave-end="opacity-0 transform scale-95">
            <div class="px-6 py-4 border-b border-gray-100 bg-gray-50 flex justify-between items-center">
                <h3 class="text-lg font-semibold text-gray-800">Create New Workout</h3>
                <button @@click="showModal = false" class="text-gray-400 hover:text-gray-600">
                    <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                    </svg>
                </button>
            </div>
            <div class="p-6">
                <!-- Use button type submit with click handler instead of form submit -->
                <form id="createWorkoutForm" action="javascript:void(0);" onsubmit="return false;">
                    @Html.AntiForgeryToken()
                    <div class="mb-4">
                        <label for="Title" class="block text-sm font-medium text-gray-700 mb-1">Workout Title</label>
                        <input type="text" 
                               id="Title" 
                               name="Title" 
                               x-model="modal.title"
                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                               placeholder="Enter workout title"
                               :class="{'border-red-500': validationErrors.title}">
                        <p x-show="validationErrors.title" 
                           x-text="validationErrors.title" 
                           class="mt-1 text-sm text-red-600"></p>
                    </div>
                    <div class="mb-4">
                        <label for="Date" class="block text-sm font-medium text-gray-700 mb-1">Date</label>
                        <input type="date" 
                               id="Date" 
                               name="Date" 
                               x-model="modal.date"
                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                               :class="{'border-red-500': validationErrors.date}">
                        <p x-show="validationErrors.date" 
                           x-text="validationErrors.date" 
                           class="mt-1 text-sm text-red-600"></p>
                    </div>
                    <div class="mb-4">
                        <label for="Notes" class="block text-sm font-medium text-gray-700 mb-1">Notes (Optional)</label>
                        <textarea id="Notes"
                                  name="Notes"
                                  x-model="modal.notes"
                                  rows="3"
                                  class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                                  placeholder="Add any notes about this workout"></textarea>
                    </div>
                    <input type="hidden" name="Duration" id="Duration" value="0" />
                    <input type="hidden" name="exercisesJson" id="exercisesJson" value="" />
                    <div class="flex justify-end space-x-3">
                        <button type="button"
                                @@click="showModal = false"
                                class="px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50 transition">
                            Cancel
                        </button>
                        <button type="button"
                                @@click="saveWorkout($event)"
                                class="px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-opacity-50 transition">
                            Save Workout
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <!-- Delete modal is now handled by the shared modal partial -->
    
    @* Include Modal Partial *@
    <partial name="_ModalPartial" />

    <!-- Success messages are now handled by the toast system -->
</div>
