@model FinalExamUI.ViewModels.UserProfile.AboutTabViewModel
@{
    // Anti-forgery token
    @Html.AntiForgeryToken()
}

<!-- Background Image Section -->
<div class="bg-white rounded-lg shadow mb-6 p-6 flex flex-col items-center">
    <h2 class="text-lg font-semibold text-gray-800 mb-2">Profile Background Image</h2>
    @if (!string.IsNullOrEmpty(Model.BackgroundImageUrl))
    {
        <img src="@Model.BackgroundImageUrl" alt="Background Image" class="mb-2 rounded-lg object-cover" style="max-width: 100%; max-height: 300px;" />
        <form asp-action="DeleteAboutBackgroundImage" asp-controller="UserProfile" asp-area="User" method="post" style="display:inline">
            <input type="hidden" name="userId" value="@Model.UserId" />
            <button type="submit" class="btn btn-danger">Delete Background Image</button>
        </form>
    }
    else
    {
        <p class="text-gray-500 italic mb-2">No background image set.</p>
    }
    <form asp-action="UploadAboutBackgroundImage" asp-controller="UserProfile" asp-area="User" method="post" enctype="multipart/form-data" class="flex flex-col items-center gap-2 mt-2">
        <input type="hidden" name="userId" value="@Model.UserId" />
        <input type="file" name="image" accept="image/*" class="form-control" />
        <button type="submit" class="btn btn-primary">@((!string.IsNullOrEmpty(Model.BackgroundImageUrl)) ? "Replace" : "Upload") Background Image</button>
    </form>
</div>

@if (Model == null)
{
    <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4">
        <div class="flex">
            <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                </svg>
            </div>
            <div class="ml-3">
                <p class="text-sm text-yellow-700">
                    No about data available for this user.
                </p>
            </div>
        </div>
    </div>
    return;
}

<div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
    <!-- Left Column -->
    <div class="lg:col-span-2">
        <!-- Personal Info Section -->
        <div class="bg-white rounded-lg shadow mb-6">
            <div class="p-6">
                <h2 class="text-xl font-semibold text-gray-800 mb-4">About Me</h2>
                <p class="text-gray-700 mb-4">@Model.PersonalInfo.About</p>
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mt-6">
                    <div>
                        <h3 class="text-sm font-medium text-gray-500">Hometown</h3>
                        <p class="mt-1 text-gray-900">@(string.IsNullOrEmpty(Model.PersonalInfo.Hometown) ? "Not specified" : Model.PersonalInfo.Hometown)</p>
                    </div>
                    <div>
                        <h3 class="text-sm font-medium text-gray-500">Current City</h3>
                        <p class="mt-1 text-gray-900">@(string.IsNullOrEmpty(Model.PersonalInfo.CurrentCity) ? "Not specified" : Model.PersonalInfo.CurrentCity)</p>
                    </div>
                    <div>
                        <h3 class="text-sm font-medium text-gray-500">Gender</h3>
                        <p class="mt-1 text-gray-900">@(string.IsNullOrEmpty(Model.Gender) ? "Not specified" : Model.Gender)</p>
                    </div>
                    <div>
                        <h3 class="text-sm font-medium text-gray-500">Birth Date</h3>
                        <p class="mt-1 text-gray-900">
                            @if (Model.BirthDate.HasValue && (!Model.PrivacySettings.ContainsKey("ShowBirthDate") || Model.PrivacySettings["ShowBirthDate"]))
                            {
                                @Model.BirthDate.Value.ToString("MMMM d, yyyy")
                            }
                            else
                            {
                                <span>Hidden or not specified</span>
                            }
                        </p>
                    </div>
                    <div>
                        <h3 class="text-sm font-medium text-gray-500">Relationship Status</h3>
                        <p class="mt-1 text-gray-900">
                            @if (!string.IsNullOrEmpty(Model.RelationshipStatus) && (!Model.PrivacySettings.ContainsKey("ShowRelationshipStatus") || Model.PrivacySettings["ShowRelationshipStatus"]))
                            {
                                @Model.RelationshipStatus
                            }
                            else
                            {
                                <span>Hidden or not specified</span>
                            }
                        </p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Hobbies Section -->
        <div class="bg-white rounded-lg shadow mb-6">
            <div class="p-6">
                <h2 class="text-xl font-semibold text-gray-800 mb-4">Hobbies</h2>
                
                @if (Model.PersonalInfo.Hobbies != null && Model.PersonalInfo.Hobbies.Any())
                {
                    <div class="flex flex-wrap gap-2">
                        @foreach (var hobby in Model.PersonalInfo.Hobbies)
                        {
                            <span class="bg-purple-100 text-purple-800 text-sm font-medium px-3 py-1 rounded-full">
                                @hobby
                            </span>
                        }
                    </div>
                }
                else
                {
                    <p class="text-gray-500 italic">No hobbies listed.</p>
                }
            </div>
        </div>

        <!-- Favorite Quotes Section -->
        <div class="bg-white rounded-lg shadow">
            <div class="p-6">
                <h2 class="text-xl font-semibold text-gray-800 mb-4">Favorite Quotes</h2>
                
                @if (Model.PersonalInfo.FavoriteQuotes != null && Model.PersonalInfo.FavoriteQuotes.Any())
                {
                    <div class="space-y-4">
                        @foreach (var quote in Model.PersonalInfo.FavoriteQuotes)
                        {
                            <blockquote class="italic border-l-4 border-gray-300 pl-4 py-2 text-gray-700">
                                "@quote"
                            </blockquote>
                        }
                    </div>
                }
                else
                {
                    <p class="text-gray-500 italic">No favorite quotes listed.</p>
                }
            </div>
        </div>
    </div>

    <!-- Right Column -->
    <div class="space-y-6">
        <!-- Contact Info Section -->
        <div class="bg-white rounded-lg shadow">
            <div class="p-6">
                <h2 class="text-xl font-semibold text-gray-800 mb-4">Contact Information</h2>
                
                @if (Model.PrivacySettings.ContainsKey("ShowContactInfo") && Model.PrivacySettings["ShowContactInfo"])
                {
                    <div class="space-y-4">
                        @if (!string.IsNullOrEmpty(Model.ContactInfo.Email))
                        {
                            <div class="flex items-center">
                                <svg class="w-5 h-5 text-gray-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                                </svg>
                                <a href="mailto:@Model.ContactInfo.Email" class="text-blue-600 hover:text-blue-800">
                                    @Model.ContactInfo.Email
                                </a>
                            </div>
                        }
                        
                        @if (!string.IsNullOrEmpty(Model.ContactInfo.Phone))
                        {
                            <div class="flex items-center">
                                <svg class="w-5 h-5 text-gray-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                                </svg>
                                <a href="tel:@Model.ContactInfo.Phone" class="text-blue-600 hover:text-blue-800">
                                    @Model.ContactInfo.Phone
                                </a>
                            </div>
                        }
                        
                        @if (!string.IsNullOrEmpty(Model.ContactInfo.Website))
                        {
                            <div class="flex items-center">
                                <svg class="w-5 h-5 text-gray-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9"></path>
                                </svg>
                                <a href="@Model.ContactInfo.Website" target="_blank" rel="noopener noreferrer" class="text-blue-600 hover:text-blue-800">
                                    @Model.ContactInfo.Website
                                </a>
                            </div>
                        }
                    </div>
                    
                    @if (Model.ContactInfo.SocialProfiles != null && Model.ContactInfo.SocialProfiles.Any())
                    {
                        <div class="mt-6">
                            <h3 class="text-lg font-medium text-gray-800 mb-3">Social Profiles</h3>
                            <div class="space-y-3">
                                @foreach (var profile in Model.ContactInfo.SocialProfiles)
                                {
                                    <a href="@profile.Value" target="_blank" rel="noopener noreferrer" 
                                       class="flex items-center text-blue-600 hover:text-blue-800">
                                        <span class="mr-2">@profile.Key</span>
                                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                                            <path d="M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z"></path>
                                            <path d="M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z"></path>
                                        </svg>
                                    </a>
                                }
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p class="text-gray-500 italic">Contact information is private.</p>
                }
            </div>
        </div>

        <!-- Languages Section -->
        <div class="bg-white rounded-lg shadow">
            <div class="p-6">
                <h2 class="text-xl font-semibold text-gray-800 mb-4">Languages</h2>
                
                @if (Model.Languages != null && Model.Languages.Any())
                {
                    <ul class="space-y-2">
                        @foreach (var language in Model.Languages)
                        {
                            <li class="flex items-center">
                                <svg class="w-5 h-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                </svg>
                                <span>@language</span>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p class="text-gray-500 italic">No languages listed.</p>
                }
            </div>
        </div>
    </div>
</div>
