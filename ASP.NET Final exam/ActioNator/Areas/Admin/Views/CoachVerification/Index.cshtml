@model List<ActioNator.ViewModels.CoachVerification.CoachVerificationUserViewModel>
@{
    ViewData["Title"] = "Coach Verification Requests";
    Layout = "_Layout";
}

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
    <h1 class="text-2xl font-semibold text-gray-900 mb-4">Coach Verification Requests</h1>

    @if (TempData["Success"] != null)
    {
        <script>
            (function(msg){
                if(!msg) return;
                const show = () => window.dispatchEvent(new CustomEvent('show-toast', { detail: { type: 'success', message: msg } }));
                if (document.readyState === 'loading') document.addEventListener('DOMContentLoaded', show); else show();
            })("@TempData["Success"]");
        </script>
    }
    @if (TempData["Error"] != null)
    {
        <script>
            (function(msg){
                if(!msg) return;
                const show = () => window.dispatchEvent(new CustomEvent('show-toast', { detail: { type: 'error', message: msg } }));
                if (document.readyState === 'loading') document.addEventListener('DOMContentLoaded', show); else show();
            })("@TempData["Error"]");
        </script>
    }

    @if (Model == null || !Model.Any())
    {
        <div class="rounded-md border border-blue-200 bg-blue-50 p-4 text-blue-700">No verification requests found.</div>
    }
    else
    {
        <div class="bg-white shadow ring-1 ring-black/5 rounded-lg">
            <div class="px-4 py-3 border-b border-gray-100">
                <h2 class="text-base font-medium text-gray-900">Pending Verifications</h2>
            </div>
            <div class="p-4" x-data="{ open: null }">
                <div class="space-y-3">
                    @foreach (var user in Model)
                    {
                        <div class="border border-gray-200 rounded-md">
                            <button type="button"
                                    class="w-full flex items-center gap-3 px-4 py-3 text-left"
                                    x-on:click="open === '@user.UserId' ? open = null : open='@user.UserId'"
                                    x-bind:aria-expanded="open === '@user.UserId'">
                                <span class="font-medium text-gray-900">User ID: @user.UserId</span>
                                <span class="ml-auto inline-flex items-center rounded-full bg-indigo-100 text-indigo-700 text-xs px-2 py-0.5">
                                    @user.Documents.Count Documents
                                </span>
                                <svg class="ml-3 h-5 w-5 text-gray-500 transition-transform"
                                     x-bind:class="open === '@user.UserId' ? 'rotate-180' : ''" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 10.94l3.71-3.71a.75.75 0 111.06 1.06l-4.24 4.24a.75.75 0 01-1.06 0L5.21 8.29a.75.75 0 01.02-1.08z" clip-rule="evenodd" />
                                </svg>
                            </button>
                            <div class="px-4 pb-4" x-show="open === '@user.UserId'" x-transition>
                                @await Html.PartialAsync("_UserVerificationPartial", user)
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>
