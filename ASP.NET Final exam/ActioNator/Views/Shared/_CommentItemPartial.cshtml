@model ActioNator.ViewModels.Community.PostCommentViewModel
@using System.Security.Claims

<div class="comment-item flex space-x-3 py-3" 
     x-data="{ 
         showActions: false, 
         isDeleted: @Json.Serialize(Model.IsDeleted), 
         liked: @Json.Serialize(Model.IsLiked),
         likesCount: @Model.LikesCount,
         toggleLike() {
             // Don't update UI directly, let SignalR handle it
             // Just send the like request
             const postId = this.$root.closest('[data-post-id]')?.dataset.postId;
             if (postId) {
                 window.likeComment('@Model.Id.ToString()', postId);
             }
         }
     }" 
     data-comment-id="@Model.Id">
    <div class="flex-shrink-0">
        <img class="h-8 w-8 rounded-full object-cover" src="@(string.IsNullOrEmpty(Model.ProfilePictureUrl) ? "/images/default-avatar.png" : Model.ProfilePictureUrl)" alt="@Model.AuthorName">
    </div>
    <div class="flex-1 min-w-0">
        <div class="flex items-start justify-between">
            <div>
                <p class="text-sm font-medium text-gray-900 dark:text-white">
                    @Model.AuthorName
                    <!-- Administrator Badge -->
                    @if (User.IsInRole("Administrator"))
                    {
                        <span class="admin-badge inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800 ml-1">
                            <svg class="h-3 w-3 mr-0.5" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 005 10a6 6 0 0012 0c0-.352-.035-.696-.1-1.028A5.001 5.001 0 0010 11z" clip-rule="evenodd"></path>
                            </svg>
                            Admin
                        </span>
                    }
                    <!-- Deleted Badge -->
                    @if (Model.IsDeleted)
                    {
                        <span class="deleted-tag inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 ml-1">
                            <svg class="h-3 w-3 mr-0.5" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                            </svg>
                            Deleted
                        </span>
                    }
                </p>
                <p class="text-xs text-gray-500 dark:text-gray-400">
                    @Model.TimeAgo
                </p>
            </div>
            <div class="relative">
                <button 
                    @@click="showActions = !showActions" 
                    @@click.outside="showActions = false"
                    class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z" />
                    </svg>
                </button>
                <div 
                    x-show="showActions" 
                    x-transition:enter="transition ease-out duration-100" 
                    x-transition:enter-start="transform opacity-0 scale-95" 
                    x-transition:enter-end="transform opacity-100 scale-100" 
                    x-transition:leave="transition ease-in duration-75" 
                    x-transition:leave-start="transform opacity-100 scale-100" 
                    x-transition:leave-end="transform opacity-0 scale-95" 
                    class="absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white dark:bg-gray-800 ring-1 ring-black ring-opacity-10 border border-gray-100 z-10"
                    style="display: none;">
                    <div class="py-1" role="menu" aria-orientation="vertical">
                        <!-- Delete Comment - Only visible to comment owner or admin/coach -->
                        @if (Model.IsAuthor || User.IsInRole("Administrator") || User.IsInRole("Coach"))
                        {
                            <button 
                                @@click="showActions = false; window.showDeleteCommentModal('@Model.Id.ToString()')" 
                                class="block w-full text-left px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700" 
                                role="menuitem"
                                data-action="delete-comment">
                                Delete
                            </button>
                        }
                        
                        <!-- Restore Comment - Only visible to admins/coaches for deleted comments -->
                        @if (Model.IsDeleted && (User.IsInRole("Administrator") || User.IsInRole("Coach")))
                        {
                            <button 
                                @@click="showActions = false; window.restoreComment('@Model.Id.ToString()', $root.closest('[data-post-id]')?.dataset.postId)" 
                                class="block w-full text-left px-4 py-2 text-sm text-green-600 dark:text-green-400 hover:bg-gray-100 dark:hover:bg-gray-700" 
                                role="menuitem"
                                data-action="restore-comment">
                                Restore
                            </button>
                        }
                        
                        <!-- Report Comment - Not visible to comment owner or if comment is deleted or if user is admin/coach -->
                        @if (!Model.IsAuthor && !Model.IsDeleted && !User.IsInRole("Administrator") && !User.IsInRole("Coach"))
                        {
                            <button 
                                @@click="showActions = false; window.reportComment('@Model.Id.ToString()', $root.closest('[data-post-id]')?.dataset.postId)" 
                                class="block w-full text-left px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700" 
                                role="menuitem"
                                data-action="report-comment">
                                Report
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div :class="isDeleted ? 'opacity-50' : ''">
            <p class="text-sm text-gray-800 dark:text-gray-200 whitespace-pre-wrap">@(string.IsNullOrEmpty(Model.Content) ? "" : Model.Content)</p>
        </div>
        <div class="mt-1 flex items-center space-x-4">
            <button 
                @@click="toggleLike()"
                :class="{ 'text-blue-600': liked, 'text-gray-500': !liked }"
                class="text-xs flex items-center dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400"
                data-action="like-comment">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5" />
                </svg>
                <span x-text="liked ? 'Liked' : 'Like'">Like</span>
                <template x-if="likesCount > 0">
                    <span class="ml-1" data-like-count x-text="'(' + likesCount + ')'">(@Model.LikesCount)</span>
                </template>
            </button>
            
        </div>
    </div>
</div>
