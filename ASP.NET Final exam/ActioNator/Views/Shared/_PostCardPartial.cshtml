@using System.Security.Claims
@model ActioNator.ViewModels.Community.PostCardViewModel

@{
    var currentUserId = User.FindFirst(ClaimTypes.NameIdentifier)?.Value?.ToLower();
}

<div class="bg-facebook-card rounded-lg shadow mb-4" 
     x-data="postCard(@(Model.IsLiked.ToString().ToLower()))" 
     data-post-id="@Model.Id" 
     data-liked="@Model.IsLiked.ToString().ToLower()" 
     data-likes-count="@Model.LikesCount" 
     data-is-deleted="@Model.IsDeleted.ToString().ToLower()" 
     data-is-admin="@(User.IsInRole("Administrator").ToString().ToLower())" 
    data-is-owner="@(Model.AuthorId.ToString().ToLower() == currentUserId ? "true" : "false")"
     data-is-certified="false">
    <!-- Post Header -->
    <div class="p-4">
        <div class="flex items-start">
            <!-- User Avatar -->
            <img class="h-10 w-10 rounded-full flex-shrink-0 object-cover" src="@(string.IsNullOrEmpty(Model.ProfilePictureUrl) ? "/images/default-avatar.png" : Model.ProfilePictureUrl)" alt="@Model.AuthorName's profile picture" />

            <!-- User Info and Post Time -->
            <div class="ml-3">
                <div class="font-medium text-gray-900">
                    @Model.AuthorName
                    <!-- Verified Badge (Commented out as IsCertified property doesn't exist) -->
                    @* Uncomment when IsCertified property is added to the model
                    @if (Model.IsCertified)
                    {
                        <span class="certified-badge inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                            <svg class="h-3 w-3 mr-0.5" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                            </svg>
                            Verified
                        </span>
                    }
                    *@
                    <!-- Deleted Badge -->
                    @if (Model.IsDeleted)
                    {
                        <span class="deleted-tag inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                            <svg class="h-3 w-3 mr-0.5" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                            </svg>
                            Deleted
                        </span>
                    }
                    <!-- Administrator Badge -->
                    @if (User.IsInRole("Administrator") && Model.AuthorId.ToString() == User.FindFirst(ClaimTypes.NameIdentifier)?.Value)
                    {
                        <span class="admin-badge inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800">
                            <svg class="h-3 w-3 mr-0.5" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 005 10a6 6 0 0012 0c0-.352-.035-.696-.1-1.028A5.001 5.001 0 0010 11z" clip-rule="evenodd"></path>
                            </svg>
                            Administrator
                        </span>
                    }
                </div>
                <div class="text-xs text-gray-500">@Model.CreatedAt</div>
            </div>

            <!-- Post Options Dropdown -->
            <div class="relative ml-auto" x-data="{ showMenu: false }" x-init="$watch('showMenu', value => { if(value === true) { $store.dropdowns.setActiveDropdown($data); } }); window.addEventListener('scroll', () => { if(showMenu) { showMenu = false; } });">
                <button @@click.stop ="showMenu = !showMenu"
                        @@click.away ="showMenu = false"
                        class="text-gray-500 hover:bg-gray-100 p-2 rounded-full">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z" />
                    </svg>
                </button>
                <div x-show="showMenu"
                     @@click.away ="showMenu = false"
                     x-transition:enter="transition ease-out duration-100"
                     x-transition:enter-start="opacity-0 scale-95"
                     x-transition:enter-end="opacity-100 scale-100"
                     x-transition:leave="transition ease-in duration-75"
                     x-transition:leave-start="opacity-100 scale-100"
                     x-transition:leave-end="opacity-0 scale-95"
                     class="absolute right-0 z-10 w-48 py-1 mt-1 bg-white rounded-lg shadow-xl ring-1 ring-black ring-opacity-5">
                    <!-- Delete Post - Only visible to post owner or admin -->
                    @if (Model.AuthorId.ToString() == User.FindFirst(ClaimTypes.NameIdentifier)?.Value || User.IsInRole("Administrator"))
                    {
                        <button @@click ="showMenu = false; window.showDeletePostModal('@Model.Id');"
                                class="block w-full px-4 py-2.5 text-sm text-left text-red-600 hover:bg-gray-100 transition-colors">
                            <div class="flex items-center">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                </svg>
                                Delete Post
                            </div>
                        </button>
                    }
                    
                    <!-- Restore Post - Only visible to admins for deleted posts -->
                    @if (Model.IsDeleted && User.IsInRole("Administrator"))
                    {
                        <button @@click ="showMenu = false; $store.modal.modalTitle = 'Restore Post'; $store.modal.modalMessage = 'Do you want to restore this post to your feed?'; $store.modal.modalConfirmText = 'Restore'; $store.modal.modalCancelText = 'Cancel'; $store.modal.modalConfirmAction = () => { isDeleted = false; }; $store.modal.modalType = 'default'; $store.modal.modalOpen = true;"
                                class="block w-full px-4 py-2.5 text-sm text-left text-green-600 hover:bg-gray-100 transition-colors">
                            <div class="flex items-center">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                                </svg>
                                Restore Post
                            </div>
                        </button>
                    }
                    
                    <div class="border-t border-gray-100 my-1"></div>
                    
                    <!-- Report Post - Not visible to post owner or if post is deleted -->
                    @if (Model.AuthorId.ToString() != User.FindFirst(ClaimTypes.NameIdentifier)?.Value && !Model.IsDeleted)
                    {
                        <button @@click ="showMenu = false; window.showReportPostModal('@Model.Id.ToString()');"
                                class="block w-full px-4 py-2.5 text-sm text-left text-gray-700 hover:bg-gray-100 transition-colors">
                            <div class="flex items-center">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path>
                                </svg>
                                Report Post
                            </div>
                        </button>
                        
                        <!-- Report User - Not visible to post owner or if post is deleted -->
                        <button @@click ="showMenu = false; window.showReportUserModal('@Model.AuthorId.ToString()');"
                                class="block w-full px-4 py-2.5 text-sm text-left text-gray-700 hover:bg-gray-100 transition-colors">
                            <div class="flex items-center">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path>
                                </svg>
                                Report User
                            </div>
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Post Content -->
    <div class="px-4 pb-3">
        <div class="text-sm mb-3 break-words">
            <p class="text-gray-800 break-words">
                @Model.Content
            </p>
        </div>
    </div>

    <!-- Post Media - Dynamic Image Grid -->
    @await Html.PartialAsync("_PostImagesPartial", Model.Images)

    <!-- Post Stats -->
    <div class="px-4 py-2 border-t border-b border-gray-200">
        <div class="flex justify-between text-xs text-gray-500">
            <div>
                <span class="inline-flex items-center">
                    <span class="flex items-center justify-center h-5 w-5 rounded-full bg-facebook-blue text-white mr-1">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3" viewBox="0 0 20 20" fill="currentColor">
                            <path d="M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.79l.05.025A4 4 0 008.943 18h5.416a2 2 0 001.962-1.608l1.2-6A2 2 0 0015.56 8H12V4a2 2 0 00-2-2 1 1 0 00-1 1v.667a4 4 0 01-.8 2.4L6.8 7.933a4 4 0 00-.8 2.4z" />
                        </svg>
                    </span>
                    <span x-text="likesCount">@Model.LikesCount</span>
                </span>
            </div>
            <div>
                <span x-text="comments.length + ' Comments'">@Model.CommentsCount Comments</span>
                <span class="mx-1">•</span>
                <span>@Model.SharesCount Shares</span>
            </div>
        </div>
    </div>

    <!-- Action Buttons -->
    @await Html.PartialAsync("_PostActionsPartial")

    <!-- Comments Section -->
    @await Html.PartialAsync("_PostCommentsPartial", Model.Comments)

    <!-- Share Modal has been removed -->
</div>
